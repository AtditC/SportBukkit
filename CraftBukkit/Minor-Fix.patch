From: cswhite2000 <18whitechristop@gmail.com>
Date: Sat, 12 Aug 2017 00:36:20 -0700
Subject: [PATCH] Minor Fix


diff --git a/src/main/java/net/minecraft/server/CommandBlockListenerAbstract.java b/src/main/java/net/minecraft/server/CommandBlockListenerAbstract.java
--- a/src/main/java/net/minecraft/server/CommandBlockListenerAbstract.java
+++ b/src/main/java/net/minecraft/server/CommandBlockListenerAbstract.java
@@ -181,14 +181,6 @@ public abstract class CommandBlockListenerAbstract implements ICommandListener {
         if (command.startsWith("/")) {
             command = command.substring(1);
         }
-
-        ServerCommandEvent event = new ServerCommandEvent(bSender, command);
-        org.bukkit.Bukkit.getPluginManager().callEvent(event);
-        if (event.isCancelled()) {
-            return 0;
-        }
-        command = event.getCommand();
-
         String[] args = command.split(" ");
         ArrayList<String[]> commands = new ArrayList<String[]>();
 
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -293,7 +293,6 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                     watchdogThread = thread1; // SportBukkit
                 }
 
-                Items.a.a(CreativeModeTab.g, NonNullList.a());
                 return true;
             }
         }
diff --git a/src/main/java/net/minecraft/server/EntityHorse.java b/src/main/java/net/minecraft/server/EntityHorse.java
--- a/src/main/java/net/minecraft/server/EntityHorse.java
+++ b/src/main/java/net/minecraft/server/EntityHorse.java
@@ -50,24 +50,24 @@ public class EntityHorse extends EntityHorseAbstract {
             }
         }
 
-        this.dB();
+        this.dD();
     }
 
     public void setVariant(int i) {
         this.datawatcher.set(EntityHorse.bI, Integer.valueOf(i));
-        this.dO();
+        this.dQ();
     }
 
     public int getVariant() {
         return ((Integer) this.datawatcher.get(EntityHorse.bI)).intValue();
     }
 
-    private void dO() {
+    private void dQ() {
         this.bO = null;
     }
 
-    protected void dB() {
-        super.dB();
+    protected void dD() {
+        super.dD();
         this.g(this.inventoryChest.getItem(1));
     }
 
@@ -75,7 +75,7 @@ public class EntityHorse extends EntityHorseAbstract {
         EnumHorseArmor enumhorsearmor = EnumHorseArmor.a(itemstack);
 
         this.datawatcher.set(EntityHorse.bJ, Integer.valueOf(enumhorsearmor.a()));
-        this.dO();
+        this.dQ();
         if (!this.world.isClientSide) {
             this.getAttributeInstance(GenericAttributes.h).b(EntityHorse.bH);
             int i = enumhorsearmor.c();
@@ -87,15 +87,15 @@ public class EntityHorse extends EntityHorseAbstract {
 
     }
 
-    public EnumHorseArmor dr() {
+    public EnumHorseArmor dt() {
         return EnumHorseArmor.a(((Integer) this.datawatcher.get(EntityHorse.bJ)).intValue());
     }
 
     public void a(IInventory iinventory) {
-        EnumHorseArmor enumhorsearmor = this.dr();
+        EnumHorseArmor enumhorsearmor = this.dt();
 
         super.a(iinventory);
-        EnumHorseArmor enumhorsearmor1 = this.dr();
+        EnumHorseArmor enumhorsearmor1 = this.dt();
 
         if (this.ticksLived > 20 && enumhorsearmor != enumhorsearmor1 && enumhorsearmor1 != EnumHorseArmor.NONE) {
             this.a(SoundEffects.cH, 0.5F, 1.0F);
@@ -113,16 +113,16 @@ public class EntityHorse extends EntityHorseAbstract {
 
     protected void initAttributes() {
         super.initAttributes();
-        this.getAttributeInstance(GenericAttributes.maxHealth).setValue((double) this.dK());
-        this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(this.dM());
-        this.getAttributeInstance(EntityHorse.attributeJumpStrength).setValue(this.dL());
+        this.getAttributeInstance(GenericAttributes.maxHealth).setValue((double) this.dM());
+        this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(this.dO());
+        this.getAttributeInstance(EntityHorse.attributeJumpStrength).setValue(this.dN());
     }
 
     public void B_() {
         super.B_();
         if (this.world.isClientSide && this.datawatcher.a()) {
             this.datawatcher.e();
-            this.dO();
+            this.dQ();
         }
 
     }
@@ -132,8 +132,8 @@ public class EntityHorse extends EntityHorseAbstract {
         return SoundEffects.cF;
     }
 
-    protected SoundEffect cd() {
-        super.cd();
+    protected SoundEffect cf() {
+        super.cf();
         return SoundEffects.cJ;
     }
 
@@ -142,8 +142,8 @@ public class EntityHorse extends EntityHorseAbstract {
         return SoundEffects.cM;
     }
 
-    protected SoundEffect dm() {
-        super.dm();
+    protected SoundEffect do_() {
+        super.do_();
         return SoundEffects.cG;
     }
 
@@ -183,12 +183,12 @@ public class EntityHorse extends EntityHorseAbstract {
                 }
 
                 if (!this.isTamed()) {
-                    this.dI();
+                    this.dK();
                     return true;
                 }
 
                 boolean flag1 = EnumHorseArmor.a(itemstack) != EnumHorseArmor.NONE;
-                boolean flag2 = !this.isBaby() && !this.dE() && itemstack.getItem() == Items.SADDLE;
+                boolean flag2 = !this.isBaby() && !this.dG() && itemstack.getItem() == Items.SADDLE;
 
                 if (flag1 || flag2) {
                     this.c(entityhuman);
@@ -206,7 +206,7 @@ public class EntityHorse extends EntityHorseAbstract {
     }
 
     public boolean mate(EntityAnimal entityanimal) {
-        return entityanimal == this ? false : (!(entityanimal instanceof EntityHorseDonkey) && !(entityanimal instanceof EntityHorse) ? false : this.dJ() && ((EntityHorseAbstract) entityanimal).dJ());
+        return entityanimal == this ? false : (!(entityanimal instanceof EntityHorseDonkey) && !(entityanimal instanceof EntityHorse) ? false : this.dL() && ((EntityHorseAbstract) entityanimal).dL());
     }
 
     public EntityAgeable createChild(EntityAgeable entityageable) {
@@ -246,7 +246,7 @@ public class EntityHorse extends EntityHorseAbstract {
         return (EntityAgeable) object;
     }
 
-    public boolean dN() {
+    public boolean dP() {
         return true;
     }
 
@@ -263,7 +263,7 @@ public class EntityHorse extends EntityHorseAbstract {
             i = ((EntityHorse.a) object).a;
         } else {
             i = this.random.nextInt(7);
-            object = new a(i);
+            object = new EntityHorse.a(i);
         }
 
         this.setVariant(i | this.random.nextInt(5) << 8);
diff --git a/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java b/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
--- a/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseChestedAbstract.java
@@ -16,11 +16,7 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
 
     protected void initAttributes() {
         super.initAttributes();
-<<<<<<< HEAD
         this.getAttributeInstance(GenericAttributes.maxHealth).setValue((double) this.dM());
-=======
-        this.getAttributeInstance(GenericAttributes.maxHealth).setValue((double) this.dK());
->>>>>>> Import necessary NMS classes
         this.getAttributeInstance(GenericAttributes.MOVEMENT_SPEED).setValue(0.17499999701976776D);
         this.getAttributeInstance(EntityHorseChestedAbstract.attributeJumpStrength).setValue(0.5D);
     }
@@ -33,7 +29,6 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
         this.datawatcher.set(EntityHorseChestedAbstract.bH, Boolean.valueOf(flag));
     }
 
-<<<<<<< HEAD
     protected int dn() {
         return this.isCarryingChest() ? 17 : super.dn();
     }
@@ -44,27 +39,11 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
 
     protected SoundEffect do_() {
         super.do_();
-=======
-    protected int dl() {
-        return this.isCarryingChest() ? 17 : super.dl();
-    }
-
-    public double aE() {
-        return super.aE() - 0.25D;
-    }
-
-    protected SoundEffect dm() {
-        super.dm();
->>>>>>> Import necessary NMS classes
         return SoundEffects.aD;
     }
 
     public void die(DamageSource damagesource) {
-<<<<<<< HEAD
-        // super.die(damagesource); // CraftBukkit - moved down
-=======
         super.die(damagesource);
->>>>>>> Import necessary NMS classes
         if (this.isCarryingChest()) {
             if (!this.world.isClientSide) {
                 this.a(Item.getItemOf(Blocks.CHEST), 1);
@@ -72,10 +51,6 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
 
             this.setCarryingChest(false);
         }
-<<<<<<< HEAD
-        super.die(damagesource); // CraftBukkit
-=======
->>>>>>> Import necessary NMS classes
 
     }
 
@@ -125,11 +100,7 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
             }
         }
 
-<<<<<<< HEAD
         this.dD();
-=======
-        this.dB();
->>>>>>> Import necessary NMS classes
     }
 
     public boolean c(int i, ItemStack itemstack) {
@@ -175,30 +146,18 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
                         return true;
                     }
 
-<<<<<<< HEAD
                     this.dK();
-=======
-                    this.dI();
->>>>>>> Import necessary NMS classes
                     return true;
                 }
 
                 if (!flag && !this.isCarryingChest() && itemstack.getItem() == Item.getItemOf(Blocks.CHEST)) {
                     this.setCarryingChest(true);
-<<<<<<< HEAD
                     this.dp();
-=======
-                    this.dn();
->>>>>>> Import necessary NMS classes
                     flag = true;
                     this.loadChest();
                 }
 
-<<<<<<< HEAD
                 if (!flag && !this.isBaby() && !this.dG() && itemstack.getItem() == Items.SADDLE) {
-=======
-                if (!flag && !this.isBaby() && !this.dE() && itemstack.getItem() == Items.SADDLE) {
->>>>>>> Import necessary NMS classes
                     this.c(entityhuman);
                     return true;
                 }
@@ -223,19 +182,11 @@ public abstract class EntityHorseChestedAbstract extends EntityHorseAbstract {
         }
     }
 
-<<<<<<< HEAD
     protected void dp() {
         this.a(SoundEffects.aE, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
     }
 
     public int dt() {
-=======
-    protected void dn() {
-        this.a(SoundEffects.aE, 1.0F, (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F);
-    }
-
-    public int dr() {
->>>>>>> Import necessary NMS classes
         return 5;
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityZombieVillager.java b/src/main/java/net/minecraft/server/EntityZombieVillager.java
--- a/src/main/java/net/minecraft/server/EntityZombieVillager.java
+++ b/src/main/java/net/minecraft/server/EntityZombieVillager.java
@@ -178,15 +178,15 @@ public class EntityZombieVillager extends EntityZombie {
     }
 
     public SoundEffect d(DamageSource damagesource) {
-        return SoundEffects.jB;
+        return SoundEffects.jy;
     }
 
     public SoundEffect cf() {
-        return SoundEffects.jA;
+        return SoundEffects.jx;
     }
 
     public SoundEffect dm() {
-        return SoundEffects.jC;
+        return SoundEffects.jz;
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/server/ItemBlock.java b/src/main/java/net/minecraft/server/ItemBlock.java
--- a/src/main/java/net/minecraft/server/ItemBlock.java
+++ b/src/main/java/net/minecraft/server/ItemBlock.java
@@ -93,13 +93,6 @@ public class ItemBlock extends Item {
         return this.a.q();
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            this.a.a(creativemodetab, nonnulllist);
-        }
-
-    }
-
     public Block getBlock() {
         return this.a;
     }
diff --git a/src/main/java/net/minecraft/server/ItemDye.java b/src/main/java/net/minecraft/server/ItemDye.java
--- a/src/main/java/net/minecraft/server/ItemDye.java
+++ b/src/main/java/net/minecraft/server/ItemDye.java
@@ -111,13 +111,4 @@ public class ItemDye extends Item {
             return false;
         }
     }
-
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            for (int i = 0; i < 16; ++i) {
-                nonnulllist.add(new ItemStack(this, 1, i));
-            }
-        }
-
-    }
 }
diff --git a/src/main/java/net/minecraft/server/ItemMonsterEgg.java b/src/main/java/net/minecraft/server/ItemMonsterEgg.java
--- a/src/main/java/net/minecraft/server/ItemMonsterEgg.java
+++ b/src/main/java/net/minecraft/server/ItemMonsterEgg.java
@@ -227,21 +227,6 @@ public class ItemMonsterEgg extends Item {
         }
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            Iterator iterator = EntityTypes.eggInfo.values().iterator();
-
-            while (iterator.hasNext()) {
-                EntityTypes.MonsterEggInfo entitytypes_monsteregginfo = (EntityTypes.MonsterEggInfo) iterator.next();
-                ItemStack itemstack = new ItemStack(this, 1);
-
-                a(itemstack, entitytypes_monsteregginfo.a);
-                nonnulllist.add(itemstack);
-            }
-        }
-
-    }
-
     public static void a(ItemStack itemstack, MinecraftKey minecraftkey) {
         NBTTagCompound nbttagcompound = itemstack.hasTag() ? itemstack.getTag() : new NBTTagCompound();
         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
diff --git a/src/main/java/net/minecraft/server/ItemSkull.java b/src/main/java/net/minecraft/server/ItemSkull.java
--- a/src/main/java/net/minecraft/server/ItemSkull.java
+++ b/src/main/java/net/minecraft/server/ItemSkull.java
@@ -83,15 +83,6 @@ public class ItemSkull extends Item {
         }
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            for (int i = 0; i < ItemSkull.a.length; ++i) {
-                nonnulllist.add(new ItemStack(this, 1, i));
-            }
-        }
-
-    }
-
     public int filterData(int i) {
         return i;
     }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutMount.java b/src/main/java/net/minecraft/server/PacketPlayOutMount.java
--- a/src/main/java/net/minecraft/server/PacketPlayOutMount.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutMount.java
@@ -8,18 +8,11 @@ public class PacketPlayOutMount implements Packet<PacketListenerPlayOut> {
     private int a;
     private int[] b;
 
-    // SportBukkit start - add constructor
-    public PacketPlayOutMount(int vehicleId, int... riderIds) {
-        this.a = vehicleId;
-        this.b = riderIds;
-    }
-    // SportBukkit end
-
     public PacketPlayOutMount() {}
 
     public PacketPlayOutMount(Entity entity) {
         this.a = entity.getId();
-        List list = entity.bD();
+        List list = entity.bF();
 
         this.b = new int[list.size()];
 
diff --git a/src/main/java/net/minecraft/server/TileEntitySkull.java b/src/main/java/net/minecraft/server/TileEntitySkull.java
--- a/src/main/java/net/minecraft/server/TileEntitySkull.java
+++ b/src/main/java/net/minecraft/server/TileEntitySkull.java
@@ -42,7 +42,7 @@ public class TileEntitySkull extends TileEntity implements ITickable {
     }
 
     public void a(NBTTagCompound nbttagcompound) {
-        super.a(nbttagcompound);
+        super.load(nbttagcompound);
         this.a = nbttagcompound.getByte("SkullType");
         this.rotation = nbttagcompound.getByte("Rot");
         if (this.a == 3) {
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockImage.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockImage.java
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlockImage.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlockImage.java
@@ -42,7 +42,7 @@ public class CraftBlockImage implements BlockImage {
                 tileEntityData.setInt("y", pos.getY());
                 tileEntityData.setInt("z", pos.getZ());
 
-                tileEntity.a(tileEntityData);
+                tileEntity.load(tileEntityData);
                 tileEntity.update();
             }
         }
