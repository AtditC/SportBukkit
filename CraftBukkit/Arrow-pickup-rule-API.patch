From 4c0cdb2b8d7a8208417bdb343793a7f68e65aeb0 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Fri, 4 Mar 2016 03:16:11 -0500
Subject: [PATCH] Arrow pickup rule API


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
index 0e1d9343..dd292da9 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
@@ -48,13 +48,30 @@ public class CraftArrow extends AbstractProjectile implements Arrow {
 
     @Override
     public PickupStatus getPickupStatus() {
-        return PickupStatus.values()[getHandle().fromPlayer.ordinal()];
+        return convertPickupStatus(getHandle().fromPlayer);
     }
 
     @Override
     public void setPickupStatus(PickupStatus status) {
-        Preconditions.checkNotNull(status, "status");
-        getHandle().fromPlayer = EntityArrow.PickupStatus.a(status.ordinal());
+        getHandle().fromPlayer = convertPickupStatus(status);
+    }
+
+    public static PickupStatus convertPickupStatus(EntityArrow.PickupStatus nms) {
+        switch(nms) {
+            case DISALLOWED: return PickupStatus.DISALLOWED;
+            case ALLOWED: return PickupStatus.ALLOWED;
+            case CREATIVE_ONLY: return PickupStatus.CREATIVE_ONLY;
+            default: throw new IllegalStateException();
+        }
+    }
+
+    public static EntityArrow.PickupStatus convertPickupStatus(PickupStatus bukkit) {
+        switch(bukkit) {
+            case DISALLOWED: return EntityArrow.PickupStatus.DISALLOWED;
+            case ALLOWED: return EntityArrow.PickupStatus.ALLOWED;
+            case CREATIVE_ONLY: return EntityArrow.PickupStatus.CREATIVE_ONLY;
+            default: throw new IllegalStateException();
+        }
     }
 
     @Override
