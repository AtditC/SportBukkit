From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 7 Jan 2017 04:14:27 -0500
Subject: [PATCH] Expand Physical API


diff --git a/src/main/java/org/bukkit/Physical.java b/src/main/java/org/bukkit/Physical.java
--- a/src/main/java/org/bukkit/Physical.java
+++ b/src/main/java/org/bukkit/Physical.java
@@ -1,5 +1,8 @@
 package org.bukkit;
 
+import java.util.UUID;
+import javax.annotation.Nullable;
+
 /**
  * Common interface for any type of object that can be associated with a specific world.
  * This interface makes no guarantees about the mutability or nullability of the world.
@@ -7,8 +10,46 @@ package org.bukkit;
 public interface Physical {
 
     /**
-     * Return the world this object is associated with. May return null if the world
-     * is not available (i.e. not loaded), or this object does not have a world.
+     * Return the {@link UUID} of the {@link World} this object is associated with.
+     *
+     * Some types may make this value available even when the world is not
+     * e.g. because it is not currently loaded.
+     *
+     * May throw {@link IllegalStateException} if this particular object is
+     * not associated with any world.
+     */
+    default UUID getWorldId() {
+        return getWorld().getWorldId();
+    }
+
+    /**
+     * Return the same {@link UUID} as {@link #getWorldId()}, if it is available,
+     * otherwise return null.
+     *
+     * The default implementation just calls {@link #getWorldId()}, assuming
+     * that it never fails. If it can fail, then this method must be
+     * overridden to return null in that case.
+     */
+    default @Nullable UUID tryWorldId() {
+        return getWorldId();
+    }
+
+    /**
+     * Return the {@link World} this object is associated with.
+     *
+     * May throw an {@link IllegalStateException} if the world is unloaded,
+     * or unavailable for some other reason.
      */
     World getWorld();
+
+    /**
+     * Return the same {@link World} as {@link #getWorld()}, if it is available,
+     * otherwise return null.
+     *
+     * The default implementation tries to lookup the world by ID through {@link Bukkit#getWorld(UUID)}.
+     */
+    default @Nullable World tryWorld() {
+        final UUID id = tryWorldId();
+        return id == null ? null : Bukkit.getWorld(id);
+    }
 }
diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -529,6 +529,11 @@ public interface World extends PluginMessageRecipient, Metadatable, Physical {
      */
     public UUID getUID();
 
+    @Override
+    default UUID getWorldId() {
+        return getUID();
+    }
+
     /**
      * Gets the default spawn {@link Location} of this world
      *
diff --git a/src/main/java/org/bukkit/block/BlockState.java b/src/main/java/org/bukkit/block/BlockState.java
--- a/src/main/java/org/bukkit/block/BlockState.java
+++ b/src/main/java/org/bukkit/block/BlockState.java
@@ -105,8 +105,6 @@ public interface BlockState extends Metadatable, Locatable {
      */
     World getWorld();
 
-    World tryWorld();
-
     Vec3 getPosition();
 
     Vec3 tryPosition();
